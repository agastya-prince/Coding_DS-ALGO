#include <iostream>
using namespace std;

void merge(int arr[], int low, int mid, int high)
{
    int left = low;
    int right = mid+1;
    int temp[high-low];
    int k=0;

    while (left<= mid && right<= high)
    {
        if (arr[left]<=arr[right])
        {
            temp[k] = arr[left];
            k++; left++;
        }
        else
        {
            temp[k] = arr[right];
            k++; right++;
        }
    }

    while (left<=mid)
    {
        temp[k] = arr[left];
        k++; left++;
    }
    while (right<= high)
    {
        temp[k] = arr[right];
        k++; right++;
    }
    
    for (int i=low; i<=high; i++)
    {
        arr[i] = temp[i-low];
        cout<<arr[i]<<"   ";
    }
    cout<<endl;
}
void mergeSort(int arr[], int low, int high)
{
    if (low>=high)
        return;
    int mid = (low+high)/2;
    mergeSort(arr, low, mid);
    mergeSort(arr, mid+1, high);
    merge(arr, low, mid, high);
}
int main()
{
    int arr[] = {4,3,1,9,7,2,5,1};
    int low = 0;
    int n = sizeof(arr)/sizeof(arr[0]);
    int high = n-1;
    mergeSort(arr, low, high);
    cout<<endl;
    for (int i=low; i<=high; i++)
        cout<<arr[i]<<"   ";
    return 0;
}
